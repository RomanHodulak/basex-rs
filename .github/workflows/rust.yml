name: Build

on: [ push, pull_request ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build binary
      run: cargo build --verbose
    - name: Set up database
      run: docker-compose up -d && sudo chown -R 1984:1984 docker
    - name: Run tests
      run: cargo test --verbose
    - run: rustup component add clippy
    - uses: actions-rs/toolchain@v1
      with:
          toolchain: nightly
          components: clippy
          override: true
    - uses: actions-rs/clippy-check@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        args: --all-features

  coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install grcov
        run: curl -L https://github.com/mozilla/grcov/releases/latest/download/grcov-linux-x86_64.tar.bz2 | tar jxf -
      - name: Set up database
        run: docker-compose up -d && sudo chown -R 1984:1984 docker
      - name: Install nightly Rust
        run: rustup install nightly
      - name: Set nightly Rust as default
        run: rustup default nightly
      - name: Add LLVM tools component
        run: rustup component add llvm-tools-preview
      - name: Build & Run test with LLVM InstrProf-based code coverage output
        run: cargo test
        env:
          LLVM_PROFILE_FILE: "your_name-%p-%m.profraw"
          RUSTFLAGS: "-Zinstrument-coverage"
      - name: Run grcov to generate lcov coverage report
        run: ./grcov . -s ./src --binary-path ./target/debug/ -t lcov --branch --ignore-not-existing -o lcov.info --ignore tests.rs --ignore '*/.cargo/*' --ignore '*/examples/*' --excl-line '^\s*\}\s*$'
      - name: Upload coverage report
        run: bash <(curl -s https://codecov.io/bash)
